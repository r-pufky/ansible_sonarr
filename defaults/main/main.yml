---
###############################################################################
# Sonarr Service Configuration
###############################################################################
# Existing databases are migrated automatically when new versions are
# installed. Migration between database platforms is not supported and must be
# done manually.
#
# Install size: ~236MB
#     Sonarr: ~234MB.
#   Packages: ~1.4MB.
#
# Set repo_host_access_token if API is rate limited. See r_pufky.deb.repo.

# Sonarr Release.
#
# Versions (Schematic):
#       MAJOR: Unsafe - requires major role changes; only default MAJOR version
#              is supported. See other branches if they exist.
#       MINOR: Safe - Usually requires no role updates. Changes usually
#              constrained to internal changes requiring no config file or
#              dependency changes.
#       PATCH: Safe - Usually requires no role updates.
#   RECOMMEND: Only increment PATCH. Never use 'latest'.
#
# Values:
#   {VERSION}: Tagged release to use ('v4.0.15.2941').
#      latest: Use latest stable release.
#
# Default: 'v4.0.15.2941'.
sonarr_srv_version: 'v4.0.15.2941'

# Remove old installs on upgrade success? Default: True.
sonarr_srv_delete_old_versions_enable: true

# Absolute path to database and metadata location.
#
# Default: '/data/sonarr/config'.
sonarr_srv_config_dir: '/data/sonarr/config'

# Service Umask. Default: '0002'.
sonarr_srv_u_mask: '0002'

# Force overwrite existing install?
#
# DATA DESTRUCTIVE.
#
# Removes existing cached downloaded archives and existing same-version install
# directories (if any). Any user data in these directories are DESTROYED.
#
# Default: False.
sonarr_srv_force_overwrite: false

# Migrate metadata (MediaCover) directory?
#
# Multi-GB. Safe to delete but will cause large metadata downloads on new
# version if not migrated with databases.
#
# Default: True.
sonarr_srv_migrate_metadata: true

# Recursively set metadata permissions?
#
# Sonarr installations with large media and metadata caches will be excessively
# slow.
#
# Default: False.
sonarr_srv_permissions_recursive_enable: false

# Automatically restart Sonarr daily?
#
# Restarting the Sonarr service will automatically apply any downloaded auto
# updates.
#
# Default: True.
sonarr_srv_restart_daily_enable: true

# Only apply configuration?
#
# Reduces role application time by ONLY applying configuration changes. Does
# NOT affect sonarr_srv_media_set_perms_file_enable.
#
# This should ONLY be used after the role has been fully run once.
#
# Useful when adding a change without reconfiguring the whole system or
# checking and installing a new version. Suggest applying with extra options:
#
#   ansible-playbook site.yml
#       --tags Sonarr
#       -e '{"sonarr_srv_force_config_only_enable": true}'
#
# Default: False.
sonarr_srv_force_config_only_enable: false

###############################################################################
# Sonarr User
###############################################################################

# User that Sonarr will run under.
#
# Enable sonarr_srv_create_user if this account is not externally managed.
#
# Default: 'media'.
sonarr_srv_user: 'media'

# Group that Sonarr will run under.
#
# Enable sonarr_srv_create_user if this group is not externally managed.
#
# Default: 'media'.
sonarr_srv_group: 'media'

# Create sonarr_srv_user, sonarr_srv_group if not detected?
#
# Applied via r_pufky.deb.users, see vars/main.yml for default user attributes.
#
# Default: True.
sonarr_srv_create_user: true

###############################################################################
# Media Permissions
###############################################################################

# Root media storage folders.
#
# Folders will be created/set with sonarr_srv_user, sonarr_srv_group,
# sonarr_srv_media_perms_folder.
#
# Default: [].
sonarr_srv_media_root_folders: []

# Enable user management of data/media files?
#
# Use sonarr_srv_user to execute data/media management commands. Role
# applies media permissions using 'root' by default. For mounted data locations
# (NFS with squashed mounts, mapped container mounts, etc) the local root user
# will not have sufficient privileges to modify these files.
#
# Applies to:
# * sonarr_srv_config_dir
# * sonarr_srv_media_root_folders
#
# Default: False.
sonarr_srv_user_data_manage_enable: false

# Media folder permissions octal.
#
# Media folders specified by sonarr_srv_media_root_folders will always be
# recursively set using sonarr_srv_media_perms_folder, sonarr_srv_user, and
# sonarr_srv_group.
#
# Default: '0755'.
sonarr_srv_media_perms_folder: '0755'

# Enable setting of media file permissions?
#
# Set file permissions within sonarr_srv_media_root_folders using
# sonarr_srv_media_perms_file, sonarr_srv_user, and sonarr_srv_group. Large
# sets of files may be slow to set permissions.
#
# Useful when first configuring to ensure service has access to all specified
# media locations. Suggest applying with extra options:
#
#   ansible-playbook site.yml
#       --tags Sonarr
#       -e '{"sonarr_srv_media_set_perms_file_enable": true}'
#
# Default: False.
sonarr_srv_media_set_perms_file_enable: false

# Media file permissions octal. Default: '0644'.
sonarr_srv_media_perms_file: '0644'
